{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ProductDetailComponent = class ProductDetailComponent {\n  constructor(router, DataService) {\n    this.router = router;\n    this.DataService = DataService;\n    this.selectedMemory = [];\n    this.sideImages = [];\n    this.id = null;\n  }\n  ngOnInit() {\n    let MyId = this.router.snapshot.paramMap.get(\"id\");\n    this.load_product(MyId);\n  }\n  load_product(id) {\n    this.DataService.get(`/products/${id}`).then(res => {\n      this.product = res.data;\n      this.img = this.product.image[0].path[0].img;\n      this.sideImages = this.product.image[0].path;\n      this.selectedColor = this.product.image[0].phoneColor;\n      this.selectedMemory = this.product.memory[0].size;\n      this.selectedPrice = this.product.memory[0].price;\n    });\n  }\n  sideImage(images) {\n    this.img = images;\n  }\n  addToCart(product) {\n    let body = {\n      productId: this.product.id,\n      name: this.product.name,\n      color: this.selectedColor,\n      memory: this.selectedMemory,\n      price: this.selectedPrice,\n      quantity: 1\n    };\n    this.DataService.post('/cart', body).then(res => {\n      this.router.navigate(['/cart']);\n    });\n  }\n  selectedPhoneColor(data) {\n    this.img = data.path[0].img;\n    this.selectedColor = data.phoneColor;\n    this.sideImages = data.path;\n  }\n  selectPhoneMemory(data) {\n    this.selectedMemory = data.size;\n    // we change price when memory size is changed\n    this.selectedPrice = data.price;\n  }\n};\nProductDetailComponent = __decorate([Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.scss']\n})], ProductDetailComponent);\nexport { ProductDetailComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AASlC,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAQjCC,YAAoBC,MAAwB,EAAUC,WAAuB;IAAzD,WAAM,GAAND,MAAM;IAA4B,gBAAW,GAAXC,WAAW;IANjE,mBAAc,GAAG,EAAE;IAInB,eAAU,GAAU,EAAE;IACtB,OAAE,GAAc,IAAI;EAGpB;EACAC,QAAQ;IACR,IAAIC,IAAI,GAAG,IAAI,CAACH,MAAM,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAClD,IAAI,CAACC,YAAY,CAACJ,IAAI,CAAC;EACxB;EACCI,YAAY,CAACC,EAAM;IACjB,IAAI,CAACP,WAAW,CAACK,GAAG,CAAC,aAAaE,EAAE,EAAE,CAAC,CAACC,IAAI,CAAEC,GAAO,IAAG;MACtD,IAAI,CAACC,OAAO,GAAED,GAAG,CAACE,IAAI;MACtB,IAAI,CAACC,GAAG,GAAG,IAAI,CAACF,OAAO,CAACG,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACF,GAAG;MAC5C,IAAI,CAACG,UAAU,GAAG,IAAI,CAACL,OAAO,CAACG,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI;MAE5C,IAAI,CAACE,aAAa,GAAG,IAAI,CAACN,OAAO,CAACG,KAAK,CAAC,CAAC,CAAC,CAACI,UAAU;MACrD,IAAI,CAACC,cAAc,GAAG,IAAI,CAACR,OAAO,CAACS,MAAM,CAAC,CAAC,CAAC,CAACC,IAAI;MACjD,IAAI,CAACC,aAAa,GAAG,IAAI,CAACX,OAAO,CAACS,MAAM,CAAC,CAAC,CAAC,CAACG,KAAK;IACnD,CAAC,CAAC;EACJ;EACAC,SAAS,CAACC,MAAU;IAClB,IAAI,CAACZ,GAAG,GAAGY,MAAM;EACnB;EACAC,SAAS,CAACf,OAAW;IACnB,IAAIgB,IAAI,GAAC;MACPC,SAAS,EAAC,IAAI,CAACjB,OAAO,CAACH,EAAE;MACzBqB,IAAI,EAAC,IAAI,CAAClB,OAAO,CAACkB,IAAI;MACtBC,KAAK,EAAC,IAAI,CAACb,aAAa;MACxBG,MAAM,EAAC,IAAI,CAACD,cAAc;MAC1BI,KAAK,EAAC,IAAI,CAACD,aAAa;MACxBS,QAAQ,EAAC;KACV;IACD,IAAI,CAAC9B,WAAW,CAAC+B,IAAI,CAAC,OAAO,EAACL,IAAI,CAAC,CAAClB,IAAI,CAAEC,GAAO,IAAG;MAClD,IAAI,CAACV,MAAM,CAACiC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC,CAAC;EACJ;EACAC,kBAAkB,CAACtB,IAAQ;IACzB,IAAI,CAACC,GAAG,GAAGD,IAAI,CAACG,IAAI,CAAC,CAAC,CAAC,CAACF,GAAG;IAC3B,IAAI,CAACI,aAAa,GAAGL,IAAI,CAACM,UAAU;IACpC,IAAI,CAACF,UAAU,GAAGJ,IAAI,CAACG,IAAI;EAC7B;EACAoB,iBAAiB,CAACvB,IAAQ;IACxB,IAAI,CAACO,cAAc,GAAGP,IAAI,CAACS,IAAI;IAC/B;IACA,IAAI,CAACC,aAAa,GAAGV,IAAI,CAACW,KAAK;EACjC;CAGD;AAtDYzB,sBAAsB,eALlCD,SAAS,CAAC;EACTuC,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,GACWxC,sBAAsB,CAsDlC;SAtDYA,sBAAsB","names":["Component","ProductDetailComponent","constructor","router","DataService","ngOnInit","MyId","snapshot","paramMap","get","load_product","id","then","res","product","data","img","image","path","sideImages","selectedColor","phoneColor","selectedMemory","memory","size","selectedPrice","price","sideImage","images","addToCart","body","productId","name","color","quantity","post","navigate","selectedPhoneColor","selectPhoneMemory","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\ttri0\\OneDrive\\Documents\\GitHub\\ANGULAR\\shop\\src\\app\\client\\product-detail\\product-detail.component.ts"],"sourcesContent":["import { DataService } from './../../service/data.service';\nimport { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.scss']\n})\nexport class ProductDetailComponent {\n  product: any;\n  selectedMemory = [];\n  img: string|any;\n  selectedColor: string|any;\n  selectedPrice: number|any;\n  sideImages :any []= [];\n  id: number|null=null;\n  constructor(private router: ActivatedRoute |, private DataService:DataService ) {\n\n  }\n  ngOnInit(): void {\n\t\tlet MyId = this.router.snapshot.paramMap.get(\"id\");\n\t\tthis.load_product(MyId);\n\t}\n  load_product(id:any){\n    this.DataService.get(`/products/${id}`).then((res:any)=>{\n      this.product= res.data;\n      this.img = this.product.image[0].path[0].img;\n      this.sideImages = this.product.image[0].path;\n      \n      this.selectedColor = this.product.image[0].phoneColor;\n      this.selectedMemory = this.product.memory[0].size;\n      this.selectedPrice = this.product.memory[0].price;\n    })\n  }\n  sideImage(images:any) {\n    this.img = images;\n  }\n  addToCart(product:any){\n    let body={\n      productId:this.product.id,\n      name:this.product.name,\n      color:this.selectedColor,\n      memory:this.selectedMemory,\n      price:this.selectedPrice,\n      quantity:1\n    }\n    this.DataService.post('/cart',body).then((res:any)=>{\n      this.router.navigate(['/cart']);\n    })\n  }\n  selectedPhoneColor(data:any) {\n    this.img = data.path[0].img;\n    this.selectedColor = data.phoneColor;\n    this.sideImages = data.path;\n  }\n  selectPhoneMemory(data:any) {\n    this.selectedMemory = data.size;\n    // we change price when memory size is changed\n    this.selectedPrice = data.price;\n  }\n  \n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}